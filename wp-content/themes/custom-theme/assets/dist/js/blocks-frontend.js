(()=>{function t(e){return t="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},t(e)}function e(t,e){for(var o=0;o<e.length;o++){var i=e[o];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(t,n(i.key),i)}}function n(e){var n=function(e){if("object"!=t(e)||!e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var o=n.call(e,"string");if("object"!=t(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==t(n)?n:n+""}var o=new(function(){return t=function t(){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this.blocks=new Map,this.init()},(n=[{key:"init",value:function(){var t=this;"loading"===document.readyState?document.addEventListener("DOMContentLoaded",function(){return t.initializeBlocks()}):this.initializeBlocks(),this.observeNewContent()}},{key:"initializeBlocks",value:function(){var t=this,e=document.querySelectorAll('[class*="block-"]');e.forEach(function(e){t.initializeBlock(e)}),document.dispatchEvent(new CustomEvent("blocksInitialized",{detail:{blocksCount:e.length}}))}},{key:"initializeBlock",value:function(t){var e=Array.from(t.classList).find(function(t){return t.startsWith("block-")});if(e){var n=e.replace("block-",""),o=t.dataset.blockId||this.generateBlockId();t.dataset.initialized||(t.dataset.initialized="true",t.dataset.blockId=o,this.blocks.set(o,{name:n,element:t,initialized:!0}),t.dispatchEvent(new CustomEvent("blockInitialized",{detail:{blockName:n,blockId:o},bubbles:!0})))}}},{key:"observeNewContent",value:function(){var t=this;new MutationObserver(function(e){e.forEach(function(e){e.addedNodes.forEach(function(e){e.nodeType===Node.ELEMENT_NODE&&(e.classList&&Array.from(e.classList).some(function(t){return t.startsWith("block-")})&&t.initializeBlock(e),(e.querySelectorAll?e.querySelectorAll('[class*="block-"]'):[]).forEach(function(e){t.initializeBlock(e)}))})})}).observe(document.body,{childList:!0,subtree:!0})}},{key:"generateBlockId",value:function(){return"block-"+Math.random().toString(36).substr(2,9)}},{key:"getBlock",value:function(t){return this.blocks.get(t)}},{key:"getBlocksByType",value:function(t){return Array.from(this.blocks.values()).filter(function(e){return e.name===t})}},{key:"cleanup",value:function(){var t=this;this.blocks.forEach(function(e,n){document.contains(e.element)||t.blocks.delete(n)})}}])&&e(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),t;var t,n}());window.BlocksManager=o,window.BlockUtils={animateOnScroll:function(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"animate-in",n=new IntersectionObserver(function(t){t.forEach(function(t){t.isIntersecting&&(t.target.classList.add(e),n.unobserve(t.target))})},{threshold:arguments.length>2&&void 0!==arguments[2]?arguments[2]:.1});n.observe(t)},loadScript:function(t){return new Promise(function(e,n){var o=document.createElement("script");o.src=t,o.onload=e,o.onerror=n,document.head.appendChild(o)})},throttle:function(t,e){var n,o=0;return function(){for(var i=this,r=arguments.length,a=new Array(r),c=0;c<r;c++)a[c]=arguments[c];var l=Date.now();l-o>e?(t.apply(this,a),o=l):(clearTimeout(n),n=setTimeout(function(){t.apply(i,a),o=Date.now()},e-(l-o)))}},debounce:function(t,e){var n;return function(){for(var o=this,i=arguments.length,r=new Array(i),a=0;a<i;a++)r[a]=arguments[a];clearTimeout(n),n=setTimeout(function(){return t.apply(o,r)},e)}}}})();
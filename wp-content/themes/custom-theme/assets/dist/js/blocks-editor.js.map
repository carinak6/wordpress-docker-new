{"version":3,"file":"js/blocks-editor.js","mappings":"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","sources":["webpack://custom-theme/external var [\"wp\",\"blockEditor\"]","webpack://custom-theme/external var [\"wp\",\"blocks\"]","webpack://custom-theme/external var [\"wp\",\"i18n\"]","webpack://custom-theme/webpack/bootstrap","webpack://custom-theme/webpack/runtime/compat get default export","webpack://custom-theme/webpack/runtime/define property getters","webpack://custom-theme/webpack/runtime/hasOwnProperty shorthand","webpack://custom-theme/webpack/runtime/make namespace object","webpack://custom-theme/./assets/js/blocks-editor.js"],"sourcesContent":["module.exports = wp.blockEditor;","module.exports = wp.blocks;","module.exports = wp.i18n;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","/**\n * JavaScript pour l'éditeur Gutenberg\n * Améliore l'expérience d'édition des blocs personnalisés\n */\n\nimport { registerBlockType } from '@wordpress/blocks';\nimport { InnerBlocks } from '@wordpress/block-editor';\nimport { __ } from '@wordpress/i18n';\n\n// Fonction pour améliorer les blocs ACF dans l'éditeur\nconst enhanceACFBlocks = () => {\n  // Ajouter des styles personnalisés pour l'aperçu des blocs\n  const addBlockPreviewStyles = () => {\n    const style = document.createElement('style');\n    style.textContent = `\n      .acf-block-preview {\n        border: 2px dashed #ccc;\n        padding: 20px;\n        text-align: center;\n        background: #f9f9f9;\n        margin: 10px 0;\n      }\n      \n      .acf-block-preview.has-background {\n        background-size: cover;\n        background-position: center;\n      }\n      \n      .acf-block-preview .block-preview-label {\n        background: rgba(0,0,0,0.7);\n        color: white;\n        padding: 5px 10px;\n        border-radius: 3px;\n        font-size: 12px;\n        display: inline-block;\n        margin-bottom: 10px;\n      }\n    `;\n    document.head.appendChild(style);\n  };\n\n  // Améliorer l'affichage des blocs vides\n  const enhanceEmptyBlocks = () => {\n    // Observer les changements dans l'éditeur\n    const observer = new MutationObserver((mutations) => {\n      mutations.forEach((mutation) => {\n        mutation.addedNodes.forEach((node) => {\n          if (node.nodeType === Node.ELEMENT_NODE) {\n            const acfBlocks = node.querySelectorAll ? node.querySelectorAll('[data-type^=\"acf/\"]') : [];\n            acfBlocks.forEach(enhanceACFBlock);\n          }\n        });\n      });\n    });\n\n    // Observer l'éditeur\n    const editor = document.querySelector('.block-editor');\n    if (editor) {\n      observer.observe(editor, { childList: true, subtree: true });\n    }\n  };\n\n  // Améliorer un bloc ACF spécifique\n  const enhanceACFBlock = (blockElement) => {\n    if (blockElement.dataset.enhanced) return;\n    blockElement.dataset.enhanced = 'true';\n\n    // Ajouter un indicateur visuel pour les blocs vides\n    const blockContent = blockElement.querySelector('.acf-block-body');\n    if (blockContent && !blockContent.textContent.trim()) {\n      blockContent.classList.add('acf-block-preview');\n      \n      const blockType = blockElement.dataset.type.replace('acf/', '');\n      const label = document.createElement('div');\n      label.className = 'block-preview-label';\n      label.textContent = `Bloc ${blockType} - Cliquez pour configurer`;\n      blockContent.prepend(label);\n    }\n  };\n\n  // Initialiser les améliorations\n  addBlockPreviewStyles();\n  enhanceEmptyBlocks();\n  \n  // Améliorer les blocs existants\n  setTimeout(() => {\n    const existingBlocks = document.querySelectorAll('[data-type^=\"acf/\"]');\n    existingBlocks.forEach(enhanceACFBlock);\n  }, 1000);\n};\n\n// Gestionnaire pour les aperçus en temps réel\nconst setupLivePreview = () => {\n  // Écouter les changements dans les champs ACF\n  document.addEventListener('change', (event) => {\n    if (event.target.closest('.acf-field')) {\n      // Déclencher une mise à jour de l'aperçu\n      const blockElement = event.target.closest('[data-type^=\"acf/\"]');\n      if (blockElement) {\n        // Simuler un changement pour forcer la mise à jour\n        const changeEvent = new Event('input', { bubbles: true });\n        blockElement.dispatchEvent(changeEvent);\n      }\n    }\n  });\n};\n\n// Ajouter des raccourcis clavier pour les blocs\nconst addKeyboardShortcuts = () => {\n  document.addEventListener('keydown', (event) => {\n    // Ctrl/Cmd + Shift + B pour ouvrir le sélecteur de blocs personnalisés\n    if ((event.ctrlKey || event.metaKey) && event.shiftKey && event.key === 'B') {\n      event.preventDefault();\n      \n      // Simuler un clic sur le bouton d'ajout de bloc\n      const addBlockButton = document.querySelector('.block-editor-inserter__toggle');\n      if (addBlockButton) {\n        addBlockButton.click();\n        \n        // Filtrer sur les blocs personnalisés après un court délai\n        setTimeout(() => {\n          const searchInput = document.querySelector('.block-editor-inserter__search-input');\n          if (searchInput) {\n            searchInput.value = 'custom';\n            searchInput.dispatchEvent(new Event('input', { bubbles: true }));\n          }\n        }, 100);\n      }\n    }\n  });\n};\n\n// Améliorer la catégorie des blocs personnalisés\nconst enhanceCustomBlocksCategory = () => {\n  // Ajouter une icône personnalisée à la catégorie\n  const style = document.createElement('style');\n  style.textContent = `\n    .block-editor-inserter__panel-content .block-editor-inserter__panel-title {\n      position: relative;\n    }\n    \n    .block-editor-inserter__panel-content .block-editor-inserter__panel-title:has-text(\"Blocs Personnalisés\"):before {\n      content: \"🎨\";\n      margin-right: 8px;\n    }\n    \n    .components-panel__body-title button[aria-expanded]:has-text(\"Blocs Personnalisés\") {\n      font-weight: bold;\n      color: #2271b1;\n    }\n  `;\n  document.head.appendChild(style);\n};\n\n// Utilitaires pour les développeurs\nwindow.ACFBlocksUtils = {\n  // Obtenir tous les blocs ACF sur la page\n  getAllACFBlocks: () => {\n    return document.querySelectorAll('[data-type^=\"acf/\"]');\n  },\n  \n  // Obtenir un bloc ACF par son type\n  getACFBlocksByType: (blockType) => {\n    return document.querySelectorAll(`[data-type=\"acf/${blockType}\"]`);\n  },\n  \n  // Recharger l'aperçu d'un bloc\n  refreshBlockPreview: (blockElement) => {\n    const refreshButton = blockElement.querySelector('.acf-block-component button[aria-label*=\"Update\"]');\n    if (refreshButton) {\n      refreshButton.click();\n    }\n  },\n  \n  // Obtenir les données d'un bloc\n  getBlockData: (blockElement) => {\n    const blockId = blockElement.getAttribute('data-block');\n    if (blockId && window.acf) {\n      return window.acf.getFields({ parent: blockElement });\n    }\n    return null;\n  }\n};\n\n// Initialiser quand le DOM est prêt\ndocument.addEventListener('DOMContentLoaded', () => {\n  // Attendre que l'éditeur soit chargé\n  const waitForEditor = () => {\n    if (document.querySelector('.block-editor')) {\n      enhanceACFBlocks();\n      setupLivePreview();\n      addKeyboardShortcuts();\n      enhanceCustomBlocksCategory();\n    } else {\n      setTimeout(waitForEditor, 500);\n    }\n  };\n  \n  waitForEditor();\n});\n\n// Support pour le rechargement à chaud en développement\nif (module.hot) {\n  module.hot.accept();\n}\n"],"names":["registerBlockType","InnerBlocks","__","enhanceACFBlocks","addBlockPreviewStyles","style","document","createElement","textContent","head","appendChild","enhanceEmptyBlocks","observer","MutationObserver","mutations","forEach","mutation","addedNodes","node","nodeType","Node","ELEMENT_NODE","acfBlocks","querySelectorAll","enhanceACFBlock","editor","querySelector","observe","childList","subtree","blockElement","dataset","enhanced","blockContent","trim","classList","add","blockType","type","replace","label","className","concat","prepend","setTimeout","existingBlocks","setupLivePreview","addEventListener","event","target","closest","changeEvent","Event","bubbles","dispatchEvent","addKeyboardShortcuts","ctrlKey","metaKey","shiftKey","key","preventDefault","addBlockButton","click","searchInput","value","enhanceCustomBlocksCategory","window","ACFBlocksUtils","getAllACFBlocks","getACFBlocksByType","refreshBlockPreview","refreshButton","getBlockData","blockId","getAttribute","acf","getFields","parent","waitForEditor","module","hot","accept"],"sourceRoot":""}
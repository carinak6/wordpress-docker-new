{"version":3,"file":"js/blocks-frontend.js","mappings":"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","sources":["webpack://custom-theme/./assets/js/blocks-frontend.js"],"sourcesContent":["/**\n * JavaScript principal pour les blocs (frontend)\n * Ce fichier charge tous les scripts nécessaires pour les blocs côté frontend\n */\n\n// Classe principale pour gérer les blocs\nclass BlocksManager {\n  constructor() {\n    this.blocks = new Map();\n    this.init();\n  }\n\n  init() {\n    // Attendre que le DOM soit prêt\n    if (document.readyState === 'loading') {\n      document.addEventListener('DOMContentLoaded', () => this.initializeBlocks());\n    } else {\n      this.initializeBlocks();\n    }\n\n    // Gérer le chargement dynamique de contenu (AJAX, etc.)\n    this.observeNewContent();\n  }\n\n  /**\n   * Initialise tous les blocs présents sur la page\n   */\n  initializeBlocks() {\n    // Auto-découverte des blocs\n    const blockElements = document.querySelectorAll('[class*=\"block-\"]');\n    \n    blockElements.forEach(element => {\n      this.initializeBlock(element);\n    });\n\n    // Déclencher l'événement personnalisé\n    document.dispatchEvent(new CustomEvent('blocksInitialized', {\n      detail: { blocksCount: blockElements.length }\n    }));\n  }\n\n  /**\n   * Initialise un bloc spécifique\n   */\n  initializeBlock(element) {\n    const classList = Array.from(element.classList);\n    const blockClass = classList.find(cls => cls.startsWith('block-'));\n    \n    if (!blockClass) return;\n\n    const blockName = blockClass.replace('block-', '');\n    const blockId = element.dataset.blockId || this.generateBlockId();\n    \n    // Éviter la double initialisation\n    if (element.dataset.initialized) return;\n    \n    element.dataset.initialized = 'true';\n    element.dataset.blockId = blockId;\n\n    // Stocker la référence du bloc\n    this.blocks.set(blockId, {\n      name: blockName,\n      element: element,\n      initialized: true\n    });\n\n    // Déclencher l'événement d'initialisation du bloc\n    element.dispatchEvent(new CustomEvent('blockInitialized', {\n      detail: { blockName, blockId },\n      bubbles: true\n    }));\n  }\n\n  /**\n   * Observer les nouveaux contenus ajoutés dynamiquement\n   */\n  observeNewContent() {\n    const observer = new MutationObserver((mutations) => {\n      mutations.forEach((mutation) => {\n        mutation.addedNodes.forEach((node) => {\n          if (node.nodeType === Node.ELEMENT_NODE) {\n            // Vérifier si le nœud lui-même est un bloc\n            if (node.classList && Array.from(node.classList).some(cls => cls.startsWith('block-'))) {\n              this.initializeBlock(node);\n            }\n            \n            // Vérifier les blocs dans les nœuds enfants\n            const childBlocks = node.querySelectorAll ? node.querySelectorAll('[class*=\"block-\"]') : [];\n            childBlocks.forEach(childBlock => {\n              this.initializeBlock(childBlock);\n            });\n          }\n        });\n      });\n    });\n\n    observer.observe(document.body, {\n      childList: true,\n      subtree: true\n    });\n  }\n\n  /**\n   * Génère un ID unique pour un bloc\n   */\n  generateBlockId() {\n    return 'block-' + Math.random().toString(36).substr(2, 9);\n  }\n\n  /**\n   * Obtenir un bloc par son ID\n   */\n  getBlock(blockId) {\n    return this.blocks.get(blockId);\n  }\n\n  /**\n   * Obtenir tous les blocs d'un type spécifique\n   */\n  getBlocksByType(blockName) {\n    return Array.from(this.blocks.values()).filter(block => block.name === blockName);\n  }\n\n  /**\n   * Nettoyer les blocs supprimés\n   */\n  cleanup() {\n    this.blocks.forEach((block, blockId) => {\n      if (!document.contains(block.element)) {\n        this.blocks.delete(blockId);\n      }\n    });\n  }\n}\n\n// Initialiser le gestionnaire de blocs\nconst blocksManager = new BlocksManager();\n\n// Exposer le gestionnaire globalement pour d'autres scripts\nwindow.BlocksManager = blocksManager;\n\n// Utilitaires globaux pour les blocs\nwindow.BlockUtils = {\n  // Animer un élément avec Intersection Observer\n  animateOnScroll: (element, animationClass = 'animate-in', threshold = 0.1) => {\n    const observer = new IntersectionObserver((entries) => {\n      entries.forEach(entry => {\n        if (entry.isIntersecting) {\n          entry.target.classList.add(animationClass);\n          observer.unobserve(entry.target);\n        }\n      });\n    }, { threshold });\n\n    observer.observe(element);\n  },\n\n  // Charger un script de manière asynchrone\n  loadScript: (src) => {\n    return new Promise((resolve, reject) => {\n      const script = document.createElement('script');\n      script.src = src;\n      script.onload = resolve;\n      script.onerror = reject;\n      document.head.appendChild(script);\n    });\n  },\n\n  // Throttle pour les événements de performance\n  throttle: (func, delay) => {\n    let timeoutId;\n    let lastExecTime = 0;\n    \n    return function (...args) {\n      const currentTime = Date.now();\n      \n      if (currentTime - lastExecTime > delay) {\n        func.apply(this, args);\n        lastExecTime = currentTime;\n      } else {\n        clearTimeout(timeoutId);\n        timeoutId = setTimeout(() => {\n          func.apply(this, args);\n          lastExecTime = Date.now();\n        }, delay - (currentTime - lastExecTime));\n      }\n    };\n  },\n\n  // Debounce pour les événements de saisie\n  debounce: (func, delay) => {\n    let timeoutId;\n    \n    return function (...args) {\n      clearTimeout(timeoutId);\n      timeoutId = setTimeout(() => func.apply(this, args), delay);\n    };\n  }\n};\n"],"names":["BlocksManager","_classCallCheck","blocks","Map","init","_createClass","key","value","_this","document","readyState","addEventListener","initializeBlocks","observeNewContent","_this2","blockElements","querySelectorAll","forEach","element","initializeBlock","dispatchEvent","CustomEvent","detail","blocksCount","length","classList","Array","from","blockClass","find","cls","startsWith","blockName","replace","blockId","dataset","generateBlockId","initialized","set","name","bubbles","_this3","observer","MutationObserver","mutations","mutation","addedNodes","node","nodeType","Node","ELEMENT_NODE","some","childBlocks","childBlock","observe","body","childList","subtree","Math","random","toString","substr","getBlock","get","getBlocksByType","values","filter","block","cleanup","_this4","contains","delete","blocksManager","window","BlockUtils","animateOnScroll","animationClass","arguments","undefined","threshold","IntersectionObserver","entries","entry","isIntersecting","target","add","unobserve","loadScript","src","Promise","resolve","reject","script","createElement","onload","onerror","head","appendChild","throttle","func","delay","timeoutId","lastExecTime","_this5","_len","args","_key","currentTime","Date","now","apply","clearTimeout","setTimeout","debounce","_this6","_len2","_key2"],"sourceRoot":""}
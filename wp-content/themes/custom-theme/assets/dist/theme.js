(()=>{"use strict";function t(e){return t="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},t(e)}function e(t,e){for(var i=0;i<e.length;i++){var o=e[i];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(t,n(o.key),o)}}function n(e){var n=function(e){if("object"!=t(e)||!e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var i=n.call(e,"string");if("object"!=t(i))return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==t(n)?n:n+""}var i=function(){return t=function t(){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this.init()},n=[{key:"init",value:function(){this.bindEvents(),this.initBlocks(),this.initAnimations()}},{key:"bindEvents",value:function(){var t=document.querySelector(".menu-toggle");t&&t.addEventListener("click",this.toggleMobileMenu.bind(this))}},{key:"toggleMobileMenu",value:function(){var t=document.querySelector(".main-navigation");t&&t.classList.toggle("toggled")}},{key:"initBlocks",value:function(){var t=this;document.querySelectorAll(".wp-block-custom-theme-custom-block").forEach(function(e){t.initBlockAnimations(e),t.initBlockInteractions(e)})}},{key:"initBlockAnimations",value:function(t){var e=new IntersectionObserver(function(t){t.forEach(function(t){t.isIntersecting&&(t.target.classList.add("is-visible"),e.unobserve(t.target))})},{threshold:.1,rootMargin:"0px 0px -50px 0px"});e.observe(t)}},{key:"initBlockInteractions",value:function(t){var e=this;t.addEventListener("mouseenter",function(){t.classList.add("is-hovered")}),t.addEventListener("mouseleave",function(){t.classList.remove("is-hovered")}),t.querySelectorAll("button, a, [data-action]").forEach(function(n){n.addEventListener("click",function(n){e.handleBlockAction(n,t)})})}},{key:"handleBlockAction",value:function(t,e){switch(t.target.dataset.action){case"toggle":e.classList.toggle("is-expanded");break;case"animate":e.classList.add("animate-pulse"),setTimeout(function(){e.classList.remove("animate-pulse")},1e3)}}},{key:"initAnimations",value:function(){var t=document.querySelectorAll("[data-animate]"),e=new IntersectionObserver(function(t){t.forEach(function(t){if(t.isIntersecting){var e=t.target.dataset.animate;t.target.classList.add("animate-".concat(e))}})},{threshold:.2});t.forEach(function(t){e.observe(t)})}}],n&&e(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),t;var t,n}();document.addEventListener("DOMContentLoaded",function(){new i}),document.addEventListener("block-loaded",function(t){(new i).initBlocks()})})();